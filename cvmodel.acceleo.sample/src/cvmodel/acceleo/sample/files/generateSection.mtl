[comment encoding = UTF-8 /]
[module generateSection('http://cvmodel/cv')]

[import cvmodel::acceleo::sample::services::generate /]
[import cvmodel::acceleo::sample::files::generateContent /]

[template private generateSectionTitle(s : Section, prefix: String) post(trim())]
[prefix/] [s.name/]
[/template]

[template private generateSectionBody(s : Section, prefix: String) post(trim())]
[for (c : Content | s.content->sortedBy(c | c.order))]
[generateContent(c)/]
[/for]
[for (s : Section | s.sections->sortedBy(s | s.order))]

[generateSection(s, prefix + '#')/]
[/for]
[/template]

[template private generateSection(s : Section, prefix: String) post(trim())]
[generateSectionTitle(s, prefix)/]
[generateSectionBody(s, prefix)/]
[/template]

[template public generateSection(s : Section) post(trim())]
[generateSection(s, '##')/]
[/template]

[template public generateSection(s : IdentificationSection, prefix: String) post(trim())]
[prefix/] [for (Sequence{s.person.firstNames, s.person.lastNames}) separator (' ')][self/][/for]
[if (not s.person.title.oclIsUndefined())][s.person.title/][/if]

[if (not s.person.dateOfBirth.oclIsUndefined())]
- Date of birth: [formatBirthDate(s.person)/]
[/if]
[if (s.person.gender <> Gender::DONOTINDICATE)]
- Gender: [s.person.gender.toString().toLower().toUpperFirst()/]
[/if]
[if (s.person.maritalStatus <> MaritalStatus::DONOTINDICATE)]
- Marital status: [s.person.maritalStatus.toString().toLower().toUpperFirst()/]
[/if]
[if (s.person.nationalities->size() = 1)]
- Nationality: [s.person.nationalities->at(1)/]
[elseif (s.person.nationalities->size() > 0)]
- Nationalities:
	[for (s.person.nationalities)]
    - [self/]
	[/for]
[/if]
[if (s.person.contacts->size() > 0)]
- Contacts:
	[for (s.person.contacts)]
    [generateContact(self)/]
	[/for]
[/if]
[if (s.person.addresses->size() > 0)]
- Addresses:
	[for (s.person.addresses)]
    [generateAddress(self)/]
	[/for]
[/if]
[generateSectionBody(s, prefix)/]
[/template]

[template public generateSection(s : SkillSection, prefix: String) post(trim())]
[generateSectionTitle(s, prefix)/]

[if (s.softSkills->size() > 0)]
- Soft skills:
    - [for (s.softSkills) separator (' | ')][self/][/for]
[/if]
[if (s.hardSkills->size() > 0)]
- Hard skills:
[for (s.hardSkills)]
    - [self.name/]: [hardSkillToStars(self)/]
[/for]
[/if]
[if (s.motherTongues->size() > 0 or s.secondLanguages->size() > 0)]
[prefix/]# Language skills
[if (s.motherTongues->size() = 1)]
- Mother-tongue: [s.motherTongues->at(1).name/]
[elseif (s.motherTongues->size() > 0)]
- Mother-tongues: [for (s.motherTongues) separator (' | ')][self.name/][/for]
[/if]
[if (s.secondLanguages->size() > 0)]
- Second language(s):

| | Conversation | Reading | Writing | Comprehension | Peer Review |
|-|-|-|-|-|-|
[for (s.secondLanguages)]
| **[self.name/]** | [self.conversation/] | [self.reading/] | [self.writing/] | [self.comprehension/] | [self.peerReview/] |
[/for]
[/if]
[/if]
[generateSectionBody(s, prefix)/]
[/template]
